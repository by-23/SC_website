// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 61763921e49c2823 "Suprema (copy)", do not edit manually */
"use client";
import {
  borderRadiusControl,
  defaultEvents,
  useIsBrowserSafari,
  useIsOnCanvas,
  useOnEnter,
  useOnExit,
  useRadius
} from "./chunks/chunk-UHJVU4UO.js";

// virtual:video-container
import { Fragment as Fragment3 } from "react";
import { ContextProviders } from "unframer";

// /:https://framer.com/m/Video-Container-rx7Y.js
import { jsx as _jsx3, jsxs as _jsxs } from "react/jsx-runtime";
import { addFonts as addFonts2, addPropertyControls as addPropertyControls3, ComponentViewportProvider, ControlType as ControlType3, cx as cx2, getFonts, getLoadingLazyAtYPosition as getLoadingLazyAtYPosition2, getPropertyControls, Image as Image2, useActiveVariantCallback as useActiveVariantCallback2, useComponentViewport as useComponentViewport2, useLocaleInfo as useLocaleInfo2, useVariantState as useVariantState2, withCSS as withCSS2 } from "unframer";
import { LayoutGroup as LayoutGroup2, motion as motion2, MotionConfigContext as MotionConfigContext2 } from "unframer";
import * as React2 from "react";

// /:https://framerusercontent.com/modules/lRDHiNWNVWmE0lqtoVHP/90ICLbTHnkXgVfH1BSgW/Video.js
import { jsx as _jsx } from "react/jsx-runtime";
import { addPropertyControls, ControlType, useIsInCurrentNavigationTarget } from "unframer";
import { isMotionValue as isMotionValue2, useInView } from "unframer";
import { memo, useCallback, useEffect, useMemo, useRef, useState } from "react";
var ObjectFitType;
(function(ObjectFitType2) {
  ObjectFitType2["Fill"] = "fill";
  ObjectFitType2["Contain"] = "contain";
  ObjectFitType2["Cover"] = "cover";
  ObjectFitType2["None"] = "none";
  ObjectFitType2["ScaleDown"] = "scale-down";
})(ObjectFitType || (ObjectFitType = {}));
var SrcType;
(function(SrcType2) {
  SrcType2["Video"] = "Upload";
  SrcType2["Url"] = "URL";
})(SrcType || (SrcType = {}));
var defaultVideo = "https://framerusercontent.com/assets/MLWPbW1dUQawJLhhun3dBwpgJak.mp4";
function getProps(props) {
  const { width, height, topLeft, topRight, bottomRight, bottomLeft, id, children, ...rest } = props;
  return rest;
}
function Video(props) {
  const newProps = getProps(props);
  return /* @__PURE__ */ _jsx(VideoMemo, { ...newProps });
}
function usePlaybackControls(videoRef) {
  const isInCurrentNavigationTarget = useIsInCurrentNavigationTarget();
  const requestingPlay = useRef(false);
  const isPlayingRef = useRef(false);
  const setProgress = useCallback((rawProgress) => {
    if (!videoRef.current) return;
    const newProgress = (rawProgress === 1 ? 0.999 : rawProgress) * videoRef.current.duration;
    const isAlreadySet = Math.abs(videoRef.current.currentTime - newProgress) < 0.1;
    if (videoRef.current.duration > 0 && !isAlreadySet) {
      videoRef.current.currentTime = newProgress;
    }
  }, []);
  const play = useCallback(() => {
    const video = videoRef.current;
    if (!video) return;
    video.preload = "auto";
    const isPlaying = video.currentTime > 0 && video.onplaying && !video.paused && !video.ended && video.readyState >= video.HAVE_CURRENT_DATA;
    if (!isPlaying && video && !requestingPlay.current && isInCurrentNavigationTarget) {
      requestingPlay.current = true;
      isPlayingRef.current = true;
      video.play().catch((e) => {
      }).finally(() => requestingPlay.current = false);
    }
  }, []);
  const pause = useCallback(() => {
    if (!videoRef.current || requestingPlay.current) return;
    videoRef.current.pause();
    isPlayingRef.current = false;
  }, []);
  return { play, pause, setProgress, isPlaying: isPlayingRef };
}
function useAutoplayBehavior({ playingProp, muted, loop, playsinline, controls }) {
  const [initialPlayingProp] = useState(() => playingProp);
  const [hasPlayingPropChanged, setHasPlayingPropChanged] = useState(false);
  if (playingProp !== initialPlayingProp && !hasPlayingPropChanged) {
    setHasPlayingPropChanged(true);
  }
  const behavesAsGif = (
    // passing `playing === true` on mount indicates that the video should
    // autoplay, like a GIF
    initialPlayingProp && muted && loop && playsinline && !controls && // Some users of the <Video> component use it by wrapping it with
    // another smart component and adding their own controls on top. (The
    // controls use transitions to control the video: e.g., when clicking
    // the play button, the smart component will transition to a state with
    // <Video playing={true} />.) In this case, we don't want the video to
    // behave as a gif, as it will be weird if the video suddenly started
    // acting as such (and auto-pausing when leaving the viewport) as soon
    // as the site visitor mutes it and clicks “Play”.
    !hasPlayingPropChanged
  );
  let autoplay;
  if (behavesAsGif) autoplay = "on-viewport";
  else if (initialPlayingProp) autoplay = "on-mount";
  else autoplay = "no-autoplay";
  return autoplay;
}
var VideoMemo = /* @__PURE__ */ memo(function VideoInner(props) {
  const {
    // default props
    srcType = "URL",
    srcUrl,
    srcFile = "",
    posterEnabled = false,
    controls = false,
    playing = true,
    loop = true,
    muted = true,
    playsinline = true,
    restartOnEnter = false,
    objectFit = "cover",
    backgroundColor = "rgba(0,0,0,0)",
    radius = 0,
    volume = 25,
    startTime: startTimeProp = 0,
    poster,
    playing: playingProp,
    progress,
    onSeeked,
    onPause,
    onPlay,
    onEnd,
    onClick,
    onMouseEnter,
    onMouseLeave,
    onMouseDown,
    onMouseUp
  } = props;
  const videoRef = useRef();
  const isSafari = useIsBrowserSafari();
  const wasPausedOnLeave = useRef(null);
  const wasEndedOnLeave = useRef(null);
  const isOnCanvas = useIsOnCanvas();
  const borderRadius = useRadius(props);
  const autoplayBehavior = isOnCanvas ? "no-autoplay" : useAutoplayBehavior({ playingProp, muted, loop, playsinline, controls });
  const isInViewport = isOnCanvas ? true : useInView(videoRef);
  const isCloseToViewport = isOnCanvas ? false : useInView(videoRef, { margin: "0px 0px 100px 100px", once: true });
  const startTime = startTimeProp === 100 ? 99.9 : startTimeProp;
  const { play, pause, setProgress, isPlaying } = usePlaybackControls(videoRef);
  useEffect(() => {
    if (isOnCanvas) return;
    if (playingProp) play();
    else pause();
  }, [playingProp]);
  useEffect(() => {
    if (isOnCanvas) return;
    if (autoplayBehavior !== "on-viewport") return;
    if (isInViewport) play();
    else pause();
  }, [autoplayBehavior, isInViewport]);
  const isMountedAndReadyForProgressChanges = useRef(false);
  useEffect(() => {
    if (!isMountedAndReadyForProgressChanges.current) {
      isMountedAndReadyForProgressChanges.current = true;
      return;
    }
    const rawProgressValue = isMotionValue2(progress) ? progress.get() : (progress !== null && progress !== void 0 ? progress : 0) * 0.01;
    setProgress(
      // When the progress value exists (e.g. <Video startTime={10}
      // progress={50} />), we respect the `progress` value over
      // `startTime`, even if `startTime` changes. That’s because
      // `startTime` == start == changing it shouldn’t affect the current
      // progress
      (rawProgressValue !== null && rawProgressValue !== void 0 ? rawProgressValue : 0) || // Then why fall back to `startTime` when `progress` doesn’t exist,
      // you might ask? Now, that’s for
      // - canvas UX: we want the video progress to change when the user
      //   is scrobbling the “Start Time” in component settings.
      // - backwards compatibility: maybe some users *are* scrobbling
      //   using `startTime` instead of `progress`? We don’t know, and it
      //   always supported it, so let’s not break it
      (startTime !== null && startTime !== void 0 ? startTime : 0) / 100
    );
  }, [startTime, srcFile, srcUrl, progress]);
  useEffect(() => {
    if (!isMotionValue2(progress)) return;
    return progress.on("change", (value) => setProgress(value));
  }, [progress]);
  useOnEnter(() => {
    if (wasPausedOnLeave.current === null) return;
    if (videoRef.current) {
      if (!wasEndedOnLeave && loop || !wasPausedOnLeave.current) play();
    }
  });
  useOnExit(() => {
    if (videoRef.current) {
      wasEndedOnLeave.current = videoRef.current.ended;
      wasPausedOnLeave.current = videoRef.current.paused;
      pause();
    }
  });
  const src = useMemo(() => {
    let fragment = "";
    if (srcType === "URL") return srcUrl + fragment;
    if (srcType === "Upload") return srcFile + fragment;
  }, [srcType, srcFile, srcUrl, startTime]);
  useEffect(() => {
    if (isSafari && videoRef.current && autoplayBehavior === "on-mount") {
      setTimeout(() => play(), 50);
    }
  }, []);
  useEffect(() => {
    if (videoRef.current && !muted) videoRef.current.volume = (volume !== null && volume !== void 0 ? volume : 0) / 100;
  }, [volume]);
  const handleReady = () => {
    const video = videoRef.current;
    if (!video) return;
    if (video.currentTime < 0.3 && startTime > 0) setProgress((startTime !== null && startTime !== void 0 ? startTime : 0) * 0.01);
    if (
      // when the component updates (e.g. only srcFile/url changes), and the video was already playing, keep playing
      isPlaying.current || autoplayBehavior === "on-mount" || autoplayBehavior === "on-viewport" && isInViewport
    ) play();
  };
  return /* @__PURE__ */ _jsx("video", { onClick, onMouseEnter, onMouseLeave, onMouseDown, onMouseUp, src, loop, ref: videoRef, onSeeked: (e) => onSeeked === null || onSeeked === void 0 ? void 0 : onSeeked(e), onPause: (e) => onPause === null || onPause === void 0 ? void 0 : onPause(e), onPlay: (e) => onPlay === null || onPlay === void 0 ? void 0 : onPlay(e), onEnded: (e) => onEnd === null || onEnd === void 0 ? void 0 : onEnd(e), autoPlay: isPlaying.current || autoplayBehavior === "on-mount" || autoplayBehavior === "on-viewport" && isInViewport, preload: isPlaying.current ? "auto" : isOnCanvas && !poster ? "metadata" : autoplayBehavior !== "on-mount" && !isCloseToViewport ? "none" : (
    // `autoplay` overrides this too
    "metadata"
  ), poster: posterEnabled && !srcFile && srcUrl === defaultVideo ? "https://framerusercontent.com/images/5ILRvlYXf72kHSVHqpa3snGzjU.jpg" : posterEnabled && poster ? poster : void 0, onLoadedData: handleReady, controls, muted: isOnCanvas ? true : muted, playsInline: playsinline, style: { cursor: !!onClick ? "pointer" : "auto", width: "100%", height: "100%", borderRadius, display: "block", objectFit, backgroundColor, objectPosition: "50% 50%" } });
});
Video.displayName = "Video";
function capitalizeFirstLetter(value) {
  return value.charAt(0).toUpperCase() + value.slice(1);
}
function titleCase(value) {
  const groups = value.match(/[A-Z]{2,}|[A-Z][a-z]+|[a-z]+|[A-Z]|\d+/gu) || [];
  return groups.map(capitalizeFirstLetter).join(" ");
}
var objectFitOptions = ["cover", "fill", "contain", "scale-down", "none"];
addPropertyControls(Video, {
  srcType: { type: ControlType.Enum, displaySegmentedControl: true, title: "Source", options: ["URL", "Upload"] },
  srcUrl: { type: ControlType.String, title: "URL", defaultValue: "https://framerusercontent.com/assets/MLWPbW1dUQawJLhhun3dBwpgJak.mp4", hidden(props) {
    return props.srcType === "Upload";
  } },
  srcFile: { type: ControlType.File, title: "File", allowedFileTypes: ["mp4", "webm"], hidden(props) {
    return props.srcType === "URL";
  } },
  playing: { type: ControlType.Boolean, title: "Playing", enabledTitle: "Yes", disabledTitle: "No" },
  posterEnabled: { type: ControlType.Boolean, title: "Poster", enabledTitle: "Yes", disabledTitle: "No", description: "We recommend adding a poster. [Learn more](https://www.framer.com/help/articles/how-are-videos-optimized-in-framer/)." },
  poster: { type: ControlType.Image, title: " ", hidden: ({ posterEnabled }) => !posterEnabled },
  backgroundColor: { type: ControlType.Color, title: "Background", defaultValue: "rgba(0,0,0,0)" },
  ...borderRadiusControl,
  startTime: { title: "Start Time", type: ControlType.Number, min: 0, max: 100, step: 0.1, unit: "%" },
  loop: { type: ControlType.Boolean, title: "Loop", enabledTitle: "Yes", disabledTitle: "No" },
  objectFit: { type: ControlType.Enum, title: "Fit", options: objectFitOptions, optionTitles: objectFitOptions.map(titleCase) },
  // restartOnEnter: {
  //     type: ControlType.Boolean,
  //     title: "On ReEnter",
  //     enabledTitle: "Restart",
  //     disabledTitle: "Resume",
  // },
  controls: { type: ControlType.Boolean, title: "Controls", enabledTitle: "Show", disabledTitle: "Hide", defaultValue: false },
  muted: { type: ControlType.Boolean, title: "Muted", enabledTitle: "Yes", disabledTitle: "No" },
  volume: { type: ControlType.Number, max: 100, min: 0, unit: "%", hidden: ({ muted }) => muted, defaultValue: 25 },
  onEnd: { type: ControlType.EventHandler },
  onSeeked: { type: ControlType.EventHandler },
  onPause: { type: ControlType.EventHandler },
  onPlay: { type: ControlType.EventHandler },
  ...defaultEvents
});

// /:https://framerusercontent.com/modules/jfgOkV2jbqIWexyAbs05/Zf5ya8lf7CdgncNgdVAO/ZRaSMME6F.js
import { jsx as _jsx2 } from "react/jsx-runtime";
import { addFonts, addPropertyControls as addPropertyControls2, ControlType as ControlType2, cx, getLoadingLazyAtYPosition, Image, useActiveVariantCallback, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var enabledGestures = { VhgaHLBT4: { hover: true, pressed: true } };
var serializationHash = "framer-v4olV";
var variantClassNames = { VhgaHLBT4: "framer-v-1ysmfdd" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants === null || variants === void 0 ? void 0 : variants.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = { bounce: 0.2, delay: 0, duration: 0.4, type: "spring" };
var toResponsiveImage = (value) => {
  if (typeof value === "object" && value !== null && typeof value.src === "string") {
    return value;
  }
  return typeof value === "string" ? { src: value } : void 0;
};
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value !== null && value !== void 0 ? value : config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx2(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion.create(React.Fragment);
var getProps2 = ({ click, height, icon, id, width, ...props }) => {
  var _ref;
  return { ...props, i8GpMikmA: (_ref = icon !== null && icon !== void 0 ? icon : props.i8GpMikmA) !== null && _ref !== void 0 ? _ref : { src: "https://framerusercontent.com/images/qpPtTp6nU33lI59frprksEsfFE.svg" }, wCoGsSWt4: click !== null && click !== void 0 ? click : props.wCoGsSWt4 };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const { activeLocale, setLocale } = useLocaleInfo();
  const { style, className, layoutId, variant, wCoGsSWt4, i8GpMikmA, ...restProps } = getProps2(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ defaultVariant: "VhgaHLBT4", enabledGestures, variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant);
  const onTap1nb6wbb = activeVariantCallback(async (...args) => {
    setGestureState({ isPressed: false });
    if (wCoGsSWt4) {
      const res = await wCoGsSWt4(...args);
      if (res === false) return false;
    }
  });
  const ref1 = React.useRef(null);
  const defaultLayoutId = React.useId();
  const sharedStyleClassNames = [];
  const componentViewport = useComponentViewport();
  return /* @__PURE__ */ _jsx2(LayoutGroup, { id: layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId, children: /* @__PURE__ */ _jsx2(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx2(Transition, { value: transition1, children: /* @__PURE__ */ _jsx2(motion.div, { ...restProps, ...gestureHandlers, className: cx(serializationHash, ...sharedStyleClassNames, "framer-1ysmfdd", className, classNames), "data-framer-name": "Play Button", "data-highlight": true, layoutDependency, layoutId: "VhgaHLBT4", onTap: onTap1nb6wbb, ref: ref !== null && ref !== void 0 ? ref : ref1, style: { background: "linear-gradient(180deg, rgba(255, 255, 255, 0.2) 0%, rgba(255, 255, 255, 0) 100%)", borderBottomLeftRadius: "100%", borderBottomRightRadius: "100%", borderTopLeftRadius: "100%", borderTopRightRadius: "100%", ...style }, ...addPropertyOverrides({ "VhgaHLBT4-hover": { "data-framer-name": void 0 }, "VhgaHLBT4-pressed": { "data-framer-name": void 0 } }, baseVariant, gestureVariant), children: /* @__PURE__ */ _jsx2(motion.div, { className: "framer-1cumxfy", "data-framer-name": "Circle", layoutDependency, layoutId: "lyKO6M8d7", style: { backgroundColor: "var(--token-c40dec17-ad9b-478b-a7f0-e25384b15814, rgb(255, 255, 255))", borderBottomLeftRadius: 100, borderBottomRightRadius: 100, borderTopLeftRadius: 100, borderTopRightRadius: 100 }, children: /* @__PURE__ */ _jsx2(Image, { background: { alt: "", fit: "fit", loading: getLoadingLazyAtYPosition(((componentViewport === null || componentViewport === void 0 ? void 0 : componentViewport.y) || 0) + (0 + (((componentViewport === null || componentViewport === void 0 ? void 0 : componentViewport.height) || 80) - 0 - 56) / 2) + 16.5), pixelHeight: 22, pixelWidth: 20, sizes: "20px", ...toResponsiveImage(i8GpMikmA), ...{ positionX: "center", positionY: "center" } }, className: "framer-zullhx", "data-framer-name": "Icon", layoutDependency, layoutId: "uRq0SP3J0", ...addPropertyOverrides({ "VhgaHLBT4-hover": { background: { alt: "", fit: "fit", loading: getLoadingLazyAtYPosition(((componentViewport === null || componentViewport === void 0 ? void 0 : componentViewport.y) || 0) + (0 + (((componentViewport === null || componentViewport === void 0 ? void 0 : componentViewport.height) || 80) - 0 - 61) / 2) + 19), pixelHeight: 22, pixelWidth: 20, sizes: "20px", ...toResponsiveImage(i8GpMikmA), ...{ positionX: "center", positionY: "center" } } }, "VhgaHLBT4-pressed": { background: { alt: "", fit: "fit", loading: getLoadingLazyAtYPosition(((componentViewport === null || componentViewport === void 0 ? void 0 : componentViewport.y) || 0) + (0 + (((componentViewport === null || componentViewport === void 0 ? void 0 : componentViewport.height) || 80) - 0 - 54) / 2) + 15.5), pixelHeight: 22, pixelWidth: 20, sizes: "20px", ...toResponsiveImage(i8GpMikmA), ...{ positionX: "center", positionY: "center" } } } }, baseVariant, gestureVariant) }) }) }) }) }) });
});
var css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-v4olV.framer-1qa680z, .framer-v4olV .framer-1qa680z { display: block; }", ".framer-v4olV.framer-1ysmfdd { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 80px; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 80px; }", ".framer-v4olV .framer-1cumxfy { align-content: center; align-items: center; aspect-ratio: 1 / 1; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: var(--framer-aspect-ratio-supported, 56px); justify-content: center; overflow: visible; padding: 0px; position: relative; width: 56px; }", ".framer-v4olV .framer-zullhx { aspect-ratio: 0.8695652173913043 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 23px); overflow: visible; position: relative; width: 20px; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-v4olV.framer-1ysmfdd, .framer-v4olV .framer-1cumxfy { gap: 0px; } .framer-v4olV.framer-1ysmfdd > *, .framer-v4olV .framer-1cumxfy > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-v4olV.framer-1ysmfdd > :first-child, .framer-v4olV .framer-1cumxfy > :first-child { margin-left: 0px; } .framer-v4olV.framer-1ysmfdd > :last-child, .framer-v4olV .framer-1cumxfy > :last-child { margin-right: 0px; } }", ".framer-v4olV.framer-v-1ysmfdd.hover .framer-1cumxfy { height: var(--framer-aspect-ratio-supported, 61px); width: 61px; }", ".framer-v4olV.framer-v-1ysmfdd.pressed .framer-1cumxfy { height: var(--framer-aspect-ratio-supported, 54px); width: 54px; }"];
var FramerZRaSMME6F = withCSS(Component, css, "framer-v4olV");
var stdin_default = FramerZRaSMME6F;
FramerZRaSMME6F.displayName = "Play Button";
FramerZRaSMME6F.defaultProps = { height: 80, width: 80 };
addPropertyControls2(FramerZRaSMME6F, { wCoGsSWt4: { title: "Click", type: ControlType2.EventHandler }, i8GpMikmA: { __defaultAssetReference: "data:framer/asset-reference,qpPtTp6nU33lI59frprksEsfFE.svg?originalFilename=Vector+%2818%29.svg&preferredSize=auto", title: "Icon", type: ControlType2.ResponsiveImage } });
addFonts(FramerZRaSMME6F, [{ explicitInter: true, fonts: [] }], { supportsExplicitInterCodegen: true });

// /:https://framer.com/m/Video-Container-rx7Y.js
var PlayButtonFonts = getFonts(stdin_default);
var VideoFonts = getFonts(Video);
var VideoControls = getPropertyControls(Video);
var enabledGestures2 = { qH3UcbL3F: { hover: true } };
var cycleOrder = ["hSTsnoFAA", "qH3UcbL3F", "W0yuOgFYI"];
var serializationHash2 = "framer-LmJD4";
var variantClassNames2 = { hSTsnoFAA: "framer-v-194g37c", qH3UcbL3F: "framer-v-1gg47j4", W0yuOgFYI: "framer-v-vxi22b" };
function addPropertyOverrides2(overrides, ...variants) {
  const nextOverrides = {};
  variants === null || variants === void 0 ? void 0 : variants.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var toResponsiveImage2 = (value) => {
  if (typeof value === "object" && value !== null && typeof value.src === "string") {
    return value;
  }
  return typeof value === "string" ? { src: value } : void 0;
};
var transition12 = { damping: 60, delay: 0, mass: 1, stiffness: 500, type: "spring" };
var addImageAlt = (image, alt) => {
  if (!image || typeof image !== "object") {
    return;
  }
  return { ...image, alt };
};
var Transition2 = ({ value, children }) => {
  const config = React2.useContext(MotionConfigContext2);
  const transition = value !== null && value !== void 0 ? value : config.transition;
  const contextValue = React2.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx3(MotionConfigContext2.Provider, { value: contextValue, children });
};
var Variants2 = motion2.create(React2.Fragment);
var humanReadableVariantMap = { "Desktop Default": "hSTsnoFAA", "Desktop Paused": "W0yuOgFYI", "Desktop Playing": "qH3UcbL3F" };
var getProps3 = ({ height, id, thumbnail, video, width, ...props }) => {
  var _ref, _ref1, _humanReadableVariantMap_props_variant, _ref2;
  return { ...props, GXqB1SHmG: (_ref = video !== null && video !== void 0 ? video : props.GXqB1SHmG) !== null && _ref !== void 0 ? _ref : "https://framerusercontent.com/assets/ogfiuJfKkk61kCDqLt2IWMVDhM.mp4", joQqmyfP3: (_ref1 = thumbnail !== null && thumbnail !== void 0 ? thumbnail : props.joQqmyfP3) !== null && _ref1 !== void 0 ? _ref1 : { src: "https://framerusercontent.com/images/jpWBSm4N9jiCT8X9ZNWJkPQ6s4.png?scale-down-to=2048", srcSet: "https://framerusercontent.com/images/jpWBSm4N9jiCT8X9ZNWJkPQ6s4.png?scale-down-to=512 512w,https://framerusercontent.com/images/jpWBSm4N9jiCT8X9ZNWJkPQ6s4.png?scale-down-to=1024 1024w,https://framerusercontent.com/images/jpWBSm4N9jiCT8X9ZNWJkPQ6s4.png?scale-down-to=2048 2048w,https://framerusercontent.com/images/jpWBSm4N9jiCT8X9ZNWJkPQ6s4.png?scale-down-to=4096 4096w,https://framerusercontent.com/images/jpWBSm4N9jiCT8X9ZNWJkPQ6s4.png 4321w" }, variant: (_ref2 = (_humanReadableVariantMap_props_variant = humanReadableVariantMap[props.variant]) !== null && _humanReadableVariantMap_props_variant !== void 0 ? _humanReadableVariantMap_props_variant : props.variant) !== null && _ref2 !== void 0 ? _ref2 : "hSTsnoFAA" };
};
var createLayoutDependency2 = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component2 = /* @__PURE__ */ React2.forwardRef(function(props, ref) {
  const { activeLocale, setLocale } = useLocaleInfo2();
  const { style, className, layoutId, variant, joQqmyfP3, GXqB1SHmG, ...restProps } = getProps3(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState2({ cycleOrder, defaultVariant: "hSTsnoFAA", enabledGestures: enabledGestures2, variant, variantClassNames: variantClassNames2 });
  const layoutDependency = createLayoutDependency2(props, variants);
  const { activeVariantCallback, delay } = useActiveVariantCallback2(baseVariant);
  const wCoGsSWt4cdv2v6 = activeVariantCallback(async (...args) => {
    setVariant("qH3UcbL3F");
  });
  const wCoGsSWt41nbtpcq = activeVariantCallback(async (...args) => {
    setVariant("W0yuOgFYI");
  });
  const ref1 = React2.useRef(null);
  const isDisplayed = () => {
    if (gestureVariant === "qH3UcbL3F-hover") return true;
    if (["qH3UcbL3F", "W0yuOgFYI"].includes(baseVariant)) return true;
    return false;
  };
  const defaultLayoutId = React2.useId();
  const sharedStyleClassNames = [];
  const componentViewport = useComponentViewport2();
  return /* @__PURE__ */ _jsx3(LayoutGroup2, { id: layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId, children: /* @__PURE__ */ _jsx3(Variants2, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx3(Transition2, { value: transition12, children: /* @__PURE__ */ _jsx3(Image2, { ...restProps, ...gestureHandlers, background: { alt: "", fit: "fill", loading: getLoadingLazyAtYPosition2((componentViewport === null || componentViewport === void 0 ? void 0 : componentViewport.y) || 0), sizes: (componentViewport === null || componentViewport === void 0 ? void 0 : componentViewport.width) || "100vw", ...toResponsiveImage2(joQqmyfP3) }, className: cx2(serializationHash2, ...sharedStyleClassNames, "framer-194g37c", className, classNames), "data-framer-name": "Desktop Default", layoutDependency, layoutId: "hSTsnoFAA", ref: ref !== null && ref !== void 0 ? ref : ref1, style: { borderBottomLeftRadius: 20, borderBottomRightRadius: 20, borderTopLeftRadius: 20, borderTopRightRadius: 20, ...style }, ...addPropertyOverrides2({ "qH3UcbL3F-hover": { "data-framer-name": void 0 }, qH3UcbL3F: { "data-framer-name": "Desktop Playing" }, W0yuOgFYI: { "data-framer-name": "Desktop Paused" } }, baseVariant, gestureVariant), children: /* @__PURE__ */ _jsxs(motion2.div, { className: "framer-g1xl3", "data-framer-name": "Container", layoutDependency, layoutId: "jsWK1tfYL", style: { borderBottomLeftRadius: 20, borderBottomRightRadius: 20, borderTopLeftRadius: 20, borderTopRightRadius: 20 }, children: [/* @__PURE__ */ _jsx3(ComponentViewportProvider, { height: 80, y: ((componentViewport === null || componentViewport === void 0 ? void 0 : componentViewport.y) || 0) + (0 + (((componentViewport === null || componentViewport === void 0 ? void 0 : componentViewport.height) || 583) - 0 - 609) / 2) + 0 + 264.5, ...addPropertyOverrides2({ W0yuOgFYI: { y: ((componentViewport === null || componentViewport === void 0 ? void 0 : componentViewport.y) || 0) + (0 + (((componentViewport === null || componentViewport === void 0 ? void 0 : componentViewport.height) || 200) - 0 - 609) / 2) + 0 + 264.5 } }, baseVariant, gestureVariant), children: /* @__PURE__ */ _jsx3(motion2.div, { className: "framer-1vt97n3-container", layoutDependency, layoutId: "NbcY_pDCc-container", style: { opacity: 1, rotate: 0 }, variants: { "qH3UcbL3F-hover": { opacity: 1 }, qH3UcbL3F: { opacity: 0, rotate: 360 }, W0yuOgFYI: { rotate: 360 } }, children: /* @__PURE__ */ _jsx3(stdin_default, { height: "100%", id: "NbcY_pDCc", layoutId: "NbcY_pDCc", wCoGsSWt4: wCoGsSWt4cdv2v6, width: "100%", ...addPropertyOverrides2({ qH3UcbL3F: { i8GpMikmA: addImageAlt({ src: "https://framerusercontent.com/images/r2ltAzEpXdmsgMcbubJRydjzh8.svg" }, ""), wCoGsSWt4: wCoGsSWt41nbtpcq } }, baseVariant, gestureVariant) }) }) }), isDisplayed() && /* @__PURE__ */ _jsx3(ComponentViewportProvider, { children: /* @__PURE__ */ _jsx3(motion2.div, { className: "framer-1f0l5fg-container", layoutDependency, layoutId: "j7ns2IEje-container", children: /* @__PURE__ */ _jsx3(Video, { backgroundColor: "rgba(0, 0, 0, 0)", borderRadius: 20, bottomLeftRadius: 20, bottomRightRadius: 20, controls: true, height: "100%", id: "j7ns2IEje", isMixedBorderRadius: false, layoutId: "j7ns2IEje", loop: true, muted: false, objectFit: "cover", playing: true, posterEnabled: true, srcFile: GXqB1SHmG, srcType: "Upload", srcUrl: "https://framerusercontent.com/assets/MLWPbW1dUQawJLhhun3dBwpgJak.mp4", startTime: 0, style: { height: "100%", width: "100%" }, topLeftRadius: 20, topRightRadius: 20, volume: 25, width: "100%", ...addPropertyOverrides2({ qH3UcbL3F: { controls: false }, W0yuOgFYI: { controls: false, playing: false } }, baseVariant, gestureVariant) }) }) })] }) }) }) }) });
});
var css2 = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-LmJD4.framer-cdxsio, .framer-LmJD4 .framer-cdxsio { display: block; }", ".framer-LmJD4.framer-194g37c { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 1096px; }", ".framer-LmJD4 .framer-g1xl3 { align-content: center; align-items: center; aspect-ratio: 1.8801313628899836 / 1; display: flex; flex: 1 0 0px; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: var(--framer-aspect-ratio-supported, 583px); justify-content: center; overflow: visible; padding: 0px; position: relative; width: 1px; }", ".framer-LmJD4 .framer-1vt97n3-container { flex: none; height: auto; position: relative; width: auto; }", ".framer-LmJD4 .framer-1f0l5fg-container { bottom: 0px; flex: none; left: 0px; position: absolute; right: 0px; top: 0px; z-index: 1; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-LmJD4.framer-194g37c, .framer-LmJD4 .framer-g1xl3 { gap: 0px; } .framer-LmJD4.framer-194g37c > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-LmJD4.framer-194g37c > :first-child { margin-left: 0px; } .framer-LmJD4.framer-194g37c > :last-child { margin-right: 0px; } .framer-LmJD4 .framer-g1xl3 > * { margin: 0px; margin-bottom: calc(10px / 2); margin-top: calc(10px / 2); } .framer-LmJD4 .framer-g1xl3 > :first-child { margin-top: 0px; } .framer-LmJD4 .framer-g1xl3 > :last-child { margin-bottom: 0px; } }", ".framer-LmJD4.framer-v-1gg47j4.framer-194g37c { cursor: pointer; }", ".framer-LmJD4.framer-v-1gg47j4 .framer-1vt97n3-container, .framer-LmJD4.framer-v-vxi22b .framer-1vt97n3-container { z-index: 2; }", ".framer-LmJD4.framer-v-vxi22b .framer-g1xl3 { height: var(--framer-aspect-ratio-supported, 106px); }"];
var FramerKlLJp67c8 = withCSS2(Component2, css2, "framer-LmJD4");
var stdin_default2 = FramerKlLJp67c8;
FramerKlLJp67c8.displayName = "Video Container";
FramerKlLJp67c8.defaultProps = { height: 583, width: 1096 };
addPropertyControls3(FramerKlLJp67c8, { variant: { options: ["hSTsnoFAA", "qH3UcbL3F", "W0yuOgFYI"], optionTitles: ["Desktop Default", "Desktop Playing", "Desktop Paused"], title: "Variant", type: ControlType3.Enum }, joQqmyfP3: { __defaultAssetReference: "data:framer/asset-reference,jpWBSm4N9jiCT8X9ZNWJkPQ6s4.png?originalFilename=Page+-1.png&preferredSize=auto", title: "Thumbnail", type: ControlType3.ResponsiveImage }, GXqB1SHmG: (VideoControls === null || VideoControls === void 0 ? void 0 : VideoControls["srcFile"]) && { ...VideoControls["srcFile"], __defaultAssetReference: "data:framer/asset-reference,ogfiuJfKkk61kCDqLt2IWMVDhM.mp4?originalFilename=4841397-hd_1920_1080_25fps+%281%29.mp4", description: void 0, hidden: void 0, title: "Video" } });
addFonts2(FramerKlLJp67c8, [{ explicitInter: true, fonts: [] }, ...PlayButtonFonts, ...VideoFonts], { supportsExplicitInterCodegen: true });

// virtual:video-container
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
  "base": "hSTsnoFAA"
};
stdin_default2.Responsive = ({ locale, ...rest }) => {
  return /* @__PURE__ */ jsx(
    ContextProviders,
    {
      routes: { "HXXIFJoEl": { "path": "/blog/case-u1" }, "KDtxaRgl5": { "path": "/ileti\u015Fim" }, "MxwjFQVGH": { "path": "/blog/case-brewmood" }, "Rtav_h6QE": { "path": "/blog/case-corendon" }, "SubI5NfBy": { "path": "/waitlist" }, "YSEeQzjwr": { "path": "/blog" }, "augiA20Il": { "path": "/" }, "cQ6Vb7aXD": { "path": "/404" }, "gM0eTBspA": { "path": "/hakk\u0131nda" }, "l0j3rKbnl": { "path": "/kvkk" } },
      children: /* @__PURE__ */ jsx(
        WithFramerBreakpoints,
        {
          Component: stdin_default2,
          variants: defaultResponsiveVariants,
          ...rest
        }
      ),
      framerSiteId: "61763921e49c2823532f999af0521758dc030056f0ee1d5ff07995fe62f9a2ed",
      locale,
      locales
    }
  );
};
function ComponentWithRoot({ locale, ...rest }) {
  return /* @__PURE__ */ jsx(
    ContextProviders,
    {
      routes: {
        "HXXIFJoEl": {
          "path": "/blog/case-u1"
        },
        "KDtxaRgl5": {
          "path": "/ileti\u015Fim"
        },
        "MxwjFQVGH": {
          "path": "/blog/case-brewmood"
        },
        "Rtav_h6QE": {
          "path": "/blog/case-corendon"
        },
        "SubI5NfBy": {
          "path": "/waitlist"
        },
        "YSEeQzjwr": {
          "path": "/blog"
        },
        "augiA20Il": {
          "path": "/"
        },
        "cQ6Vb7aXD": {
          "path": "/404"
        },
        "gM0eTBspA": {
          "path": "/hakk\u0131nda"
        },
        "l0j3rKbnl": {
          "path": "/kvkk"
        }
      },
      children: /* @__PURE__ */ jsx(stdin_default2, { ...rest }),
      framerSiteId: "61763921e49c2823532f999af0521758dc030056f0ee1d5ff07995fe62f9a2ed",
      locale,
      locales
    }
  );
}
Object.assign(ComponentWithRoot, stdin_default2);
export {
  ComponentWithRoot as default
};
