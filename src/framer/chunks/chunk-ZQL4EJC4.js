// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 61763921e49c2823 "Suprema (copy)", do not edit manually */
import {
  className,
  css,
  fonts
} from "./chunk-ISYIK7XM.js";

// /:https://framerusercontent.com/modules/uUguES0IGsYsjPLHOBv9/D3CU0qTSixRi90MflE08/Truncate.js
import { jsx as _jsx } from "react/jsx-runtime";
import { motion } from "unframer";
import { addPropertyControls, ControlType } from "unframer";
function TruncateText(props) {
  const { text, lineCount, textStyle, letterMode, maxCharacters } = props;
  let lineClampStyle = {};
  if (letterMode) {
    lineClampStyle = { display: "block", overflow: "hidden", textOverflow: "ellipsis", whiteSpace: "nowrap", width: `calc(${maxCharacters} * 0.6ch + 1.5ch)` };
  } else {
    lineClampStyle = { display: "-webkit-box", WebkitLineClamp: lineCount, WebkitBoxOrient: "vertical", overflow: "hidden", textOverflow: "ellipsis", textAlign: textStyle.textAlign };
  }
  const transformStyle = { textTransform: textStyle.textTransform };
  const containerStyle = { display: "flex", justifyContent: getJustifyContent(textStyle.textAlign), alignItems: getAlignItems(textStyle.textAlign), overflow: "visible" };
  function getJustifyContent(textAlign) {
    switch (textAlign) {
      case "center":
        return "center";
      case "right":
        return "flex-end";
      case "left":
      default:
        return "flex-start";
    }
  }
  function getAlignItems(textAlign) {
    switch (textAlign) {
      case "center":
        return "center";
      case "right":
      case "left":
      default:
        return "flex-start";
    }
  }
  return /* @__PURE__ */ _jsx(motion.div, { style: { ...containerStyle }, children: /* @__PURE__ */ _jsx(motion.div, { style: { ...lineClampStyle, ...textStyle, ...transformStyle, fontFamily: textStyle.font }, children: text }) });
}
addPropertyControls(TruncateText, { text: { type: ControlType.String, defaultValue: "Lorem ipsum dolor sit amet, consectetur adipiscing elit." }, letterMode: { type: ControlType.Boolean, title: "Letter Mode", defaultValue: false }, maxCharacters: { type: ControlType.Number, title: "Max Characters", defaultValue: 20, min: 1, step: 1, displayStepper: true, hidden(props) {
  return !props.letterMode;
} }, lineCount: { type: ControlType.Number, defaultValue: 1, min: 1, displayStepper: true, step: 1, hidden(props) {
  return props.letterMode;
} }, textStyle: { type: ControlType.Object, controls: { font: { type: ControlType.String, defaultValue: "Inter" }, color: { type: ControlType.Color, defaultValue: "#000" }, fontSize: { type: ControlType.Number, defaultValue: 16 }, fontWeight: { type: ControlType.Number, defaultValue: 400, displayStepper: true, step: 100 }, lineHeight: { type: ControlType.Number, defaultValue: 1.5, displayStepper: true, step: 0.1 }, letterSpacing: { type: ControlType.Number, defaultValue: 0, displayStepper: true, step: 0.1 }, textAlign: { type: ControlType.Enum, options: ["left", "center", "right"], defaultValue: "left" }, textTransform: { type: ControlType.Enum, options: ["none", "capitalize", "lowercase", "uppercase"], defaultValue: "none", title: "Transform" } } } });

// /:https://framerusercontent.com/modules/4w72diTXYhEXTnlPCDo0/Gznp4jaRF5gzuIzWNeVA/wm8NGh3qm.js
import { jsx as _jsx2 } from "react/jsx-runtime";
import { addFonts, addPropertyControls as addPropertyControls2, ControlType as ControlType2, cx, getFontsFromSharedStyle, RichText, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion as motion2, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var cycleOrder = ["hNtV9_tcl", "FREd2L1he", "SgFm05gFP"];
var serializationHash = "framer-pUZei";
var variantClassNames = { FREd2L1he: "framer-v-16l0g9r", hNtV9_tcl: "framer-v-1bu2tcx", SgFm05gFP: "framer-v-1qvjwfl" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = { bounce: 0.2, delay: 0, duration: 0.4, type: "spring" };
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx2(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion2.create(React.Fragment);
var humanReadableVariantMap = { Blue: "FREd2L1he", Green: "hNtV9_tcl", Yellow: "SgFm05gFP" };
var getProps = ({ height, id, title, width, ...props }) => {
  return { ...props, MPXYpSmPf: title ?? props.MPXYpSmPf ?? "Green", variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "hNtV9_tcl" };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const { style, className: className2, layoutId, variant, MPXYpSmPf, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ cycleOrder, defaultVariant: "hNtV9_tcl", ref: refBinding, variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [className];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  return /* @__PURE__ */ _jsx2(LayoutGroup, { id: layoutId ?? defaultLayoutId, children: /* @__PURE__ */ _jsx2(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx2(Transition, { value: transition1, children: /* @__PURE__ */ _jsx2(motion2.div, { ...restProps, ...gestureHandlers, className: cx(scopingClassNames, "framer-1bu2tcx", className2, classNames), "data-framer-name": "Green", layoutDependency, layoutId: "hNtV9_tcl", ref: refBinding, style: { ...style }, ...addPropertyOverrides({ FREd2L1he: { "data-framer-name": "Blue" }, SgFm05gFP: { "data-framer-name": "Yellow" } }, baseVariant, gestureVariant), children: /* @__PURE__ */ _jsx2(RichText, { __fromCanvasComponent: true, children: /* @__PURE__ */ _jsx2(React.Fragment, { children: /* @__PURE__ */ _jsx2(motion2.p, { className: "framer-styles-preset-jycf3n", "data-styles-preset": "QPTmydKPK", style: { "--framer-text-color": "var(--extracted-r6o4lv, rgb(104, 204, 88))" }, children: "Green" }) }), className: "framer-7n2e9t", "data-framer-name": "Label", fonts: ["Inter"], layoutDependency, layoutId: "CpISXHc4O", style: { "--extracted-r6o4lv": "rgb(104, 204, 88)", "--framer-paragraph-spacing": "5px" }, text: MPXYpSmPf, variants: { FREd2L1he: { "--extracted-r6o4lv": "rgb(88, 140, 204)" }, SgFm05gFP: { "--extracted-r6o4lv": "rgb(245, 204, 85)" } }, verticalAlignment: "top", withExternalLayout: true, ...addPropertyOverrides({ FREd2L1he: { children: /* @__PURE__ */ _jsx2(React.Fragment, { children: /* @__PURE__ */ _jsx2(motion2.p, { className: "framer-styles-preset-jycf3n", "data-styles-preset": "QPTmydKPK", style: { "--framer-text-color": "var(--extracted-r6o4lv, rgb(88, 140, 204))" }, children: "Green" }) }) }, SgFm05gFP: { children: /* @__PURE__ */ _jsx2(React.Fragment, { children: /* @__PURE__ */ _jsx2(motion2.p, { className: "framer-styles-preset-jycf3n", "data-styles-preset": "QPTmydKPK", style: { "--framer-text-color": "var(--extracted-r6o4lv, rgb(245, 204, 85))" }, children: "Green" }) }) } }, baseVariant, gestureVariant) }) }) }) }) });
});
var css2 = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-pUZei.framer-1bgo6ig, .framer-pUZei .framer-1bgo6ig { display: block; }", ".framer-pUZei.framer-1bu2tcx { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 27px; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: min-content; }", ".framer-pUZei .framer-7n2e9t { flex: none; height: auto; position: relative; white-space: pre; width: auto; }", ...css];
var Framerwm8NGh3qm = withCSS(Component, css2, "framer-pUZei");
var stdin_default = Framerwm8NGh3qm;
Framerwm8NGh3qm.displayName = "Helper/Color Texts";
Framerwm8NGh3qm.defaultProps = { height: 27, width: 48 };
addPropertyControls2(Framerwm8NGh3qm, { variant: { options: ["hNtV9_tcl", "FREd2L1he", "SgFm05gFP"], optionTitles: ["Green", "Blue", "Yellow"], title: "Variant", type: ControlType2.Enum }, MPXYpSmPf: { defaultValue: "Green", displayTextArea: false, title: "Title", type: ControlType2.String } });
addFonts(Framerwm8NGh3qm, [{ explicitInter: true, fonts: [{ family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F", url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116", url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+1F00-1FFF", url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0370-03FF", url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF", url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD", url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2", weight: "400" }, { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB", url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2", weight: "400" }] }, ...getFontsFromSharedStyle(fonts)], { supportsExplicitInterCodegen: true });

export {
  TruncateText,
  stdin_default
};
