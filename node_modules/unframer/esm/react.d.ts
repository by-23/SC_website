import { ComponentPropsWithoutRef, ComponentType } from 'react';
import { defaultBreakpointSizes } from './css.js';
export type UnframerBreakpoint = keyof typeof defaultBreakpointSizes;
/**
 * @deprecated Use styles.css import instead
 */
export declare function FramerStyles({ Components }: {
    Components?: any[] | undefined;
}): any;
export declare const WithFramerBreakpoints: <T extends ComponentType<{
    variant?: any;
    className?: string;
}>>({ Component, variants: _breakpointsMap, ...rest }: {
    Component: T;
    variants: Record<UnframerBreakpoint, ComponentPropsWithoutRef<T>["variant"]>;
} & Omit<ComponentPropsWithoutRef<T>, "variant">) => any;
import React from 'react';
export declare function ResolveLinksAdapted({ links, children }: {
    links: any;
    children: any;
}): any;
export declare function AdaptedLink({ href, nodeId, openInNewTab, smoothScroll, children, ...rest }: {
    [x: string]: any;
    href: any;
    nodeId: any;
    openInNewTab: any;
    smoothScroll: any;
    children: any;
}): import("react/jsx-runtime.js").JSX.Element;
export declare function ContextProviders({ locale: locale_, children, framerSiteId, routes, locales, }: {
    locale: any;
    children: any;
    framerSiteId: any;
    routes: any;
    locales: any;
}): import("react/jsx-runtime.js").JSX.Element;
type UnframerProviderProps = {
    navigate?: (url: string) => void;
    locale?: string;
    children: React.ReactNode;
};
export declare function UnframerProvider(props: UnframerProviderProps): import("react/jsx-runtime.js").JSX.Element;
export {};
//# sourceMappingURL=react.d.ts.map